// WeatherService.java
package com.example.weatherbot.service;

import com.example.weatherbot.config.BotConfig;
import com.example.weatherbot.model.WeatherResponse;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
@RequiredArgsConstructor
public class WeatherService {

    private final BotConfig config;
    private final RestTemplate restTemplate = new RestTemplate();

    public String getWeatherByCity(String city) {
        String url = "https://api.openweathermap.org/data/2.5/weather?q=" + city +
                "&appid=" + config.getWeatherApiKey() +
                "&units=metric&lang=ru";

        try {
            WeatherResponse response = restTemplate.getForObject(url, WeatherResponse.class);
            if (response == null || response.getMain() == null) {
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.";
            }

            return String.format(
                    "–ü–æ–≥–æ–¥–∞ –≤ %s:\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.1f¬∞C\nü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: %.1f¬∞C\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%\nüìã %s",
                    city,
                    response.getMain().getTemp(),
                    response.getMain().getFeelsLike(),
                    response.getMain().getHumidity(),
                    response.getWeather().get(0).getDescription()
            );
        } catch (Exception e) {
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: " + e.getMessage();
        }
    }
}